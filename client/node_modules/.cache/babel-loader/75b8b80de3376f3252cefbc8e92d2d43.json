{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { FaRegThumbsUp, FaRegThumbsDown, FaRegTrashAlt } from \"react-icons/fa\";\nimport avatar from \"../../img/avatar.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  owner,\n  post: {\n    _id,\n    text,\n    name,\n    user,\n    likes,\n    photo,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img my-1\",\n        src: `/uploads/${photo}`,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img my-1\",\n        src: avatar,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(FaRegThumbsUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => removeLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(FaRegThumbsDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), !auth.loading && (owner.toString() === auth.user._id || user === auth.user._id) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => deletePost(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 9\n}, this);\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","FaRegThumbsUp","FaRegThumbsDown","FaRegTrashAlt","avatar","PostItem","auth","owner","post","_id","text","name","user","likes","photo","comments","date","showActions","e","length","loading","toString","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React ,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport {addLike , removeLike ,deletePost}  from '../../actions/post';\r\nimport { FaRegThumbsUp,FaRegThumbsDown,FaRegTrashAlt } from \"react-icons/fa\";\r\nimport avatar from \"../../img/avatar.jpg\";\r\n\r\nconst PostItem = ({ \r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  owner,\r\n  post:{_id,text,name,user,likes,photo,comments,date},showActions\r\n}) =>(\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to={`/profile/${user}`}>\r\n            {photo ? (\r\n                     <img\r\n                     className=\"round-img my-1\"\r\n                     src={`/uploads/${photo}`}\r\n                     alt=\"...\"\r\n                 />) : (<img\r\n                  className=\"round-img my-1\"\r\n                    src={avatar}\r\n                    alt=\"...\"\r\n                />)\r\n            }\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n\r\n            {showActions && (<Fragment>\r\n              <button onClick={e=> addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <FaRegThumbsUp/>{' '}\r\n              <span>{likes.length>0 && (  \r\n              <span >{likes.length}</span>)}</span>\r\n            </button>\r\n            <button onClick={e=>removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <FaRegThumbsDown/>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{' '}\r\n               {comments.length>0 && (  \r\n              <span className='comment-count'>{comments.length}</span>)}\r\n            </Link>\r\n\r\n            {!auth.loading && (owner.toString() === auth.user._id ||user === auth.user._id) && (\r\n                <button  \r\n                onClick={e=>deletePost(_id)}    \r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n              >\r\n              <FaRegTrashAlt/>\r\n              </button>\r\n            )}\r\n          </Fragment>)}\r\n            \r\n          </div>\r\n        </div>\r\n    );\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}; \r\nPostItem.propTypes = {\r\npost:PropTypes.object.isRequired,\r\nauth:PropTypes.object.isRequired,\r\naddLike:PropTypes.func.isRequired,\r\nremoveLike:PropTypes.func.isRequired,\r\ndeletePost:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{addLike,removeLike,deletePost})(PostItem)\r\n"]},"metadata":{},"sourceType":"module"}