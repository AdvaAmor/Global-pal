{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\myNotebook\\\\FolderGroup.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { storage, database } from \"../../firebase\";\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useFolder } from '../../hooks/useFolder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeleteFolder(folderId, group, path) {\n  if (folderId == null) return;\n  database.files.where(\"folderId\", \"==\", folderId).where(\"userId\", \"==\", group._id).get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      const file = database.formatDoc(doc);\n      const desertRef = storage.ref().child(`files/${file.userId}/${path}/${file.name}`);\n      console.log(\"deleting files: \" + `files/${file.userId}/${path}/${file.name}`);\n      desertRef.delete().then(() => {\n        console.log(\"the file delete from the store\");\n        database.files.doc(file.id).delete().then(() => {\n          console.log(\"the file delete from data bass\");\n        }).catch(() => {\n          console.log(\"the file is not delete from data\");\n        });\n      }).catch(error => {\n        console.log(error, \"the file is not delete from storeg\");\n      });\n    });\n  });\n  database.folders.where(\"parentId\", \"==\", folderId).where(\"userId\", \"==\", group._id).get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      console.log(\"call other folder\");\n      const folder = database.formatDoc(doc);\n      DeleteFolder(folder.id, group, `${path}/${folder.name}`);\n    });\n  });\n  console.log(\"delete folder\");\n  database.folders.doc(folderId).delete().then(() => {\n    console.log(\"the file delete from data bass\");\n  }).catch(() => {\n    console.log(\"the file is not delete from data\");\n  });\n}\n\n_c = DeleteFolder;\nexport default function FolderGroup({\n  folder,\n  index,\n  group,\n  AuthUserId,\n  path\n}) {\n  if (path === 'Root') {\n    path = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [group.owner === AuthUserId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n        id: index,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          to: {\n            pathname: `/folderG/${folder.id}`,\n            state: {\n              folder: folder\n            }\n          },\n          variant: \"outline-dark\",\n          className: \"text-truncate w-100\",\n          as: Link,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faFolder,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 14\n          }, this), folder.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n        id: index,\n        className: \"adva\",\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: \"adva1\",\n          onClick: () => DeleteFolder(folder.id, group, path + \"/\" + folder.name),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FaRegTrashAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 12\n            }, this), \". delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true), group.owner !== AuthUserId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        to: {\n          pathname: `/folderG/${folder.id}`,\n          state: {\n            folder: folder\n          }\n        },\n        variant: \"outline-dark\",\n        className: \"text-truncate w-100\",\n        as: Link,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faFolder,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this), folder.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_c2 = FolderGroup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DeleteFolder\");\n$RefreshReg$(_c2, \"FolderGroup\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/myNotebook/FolderGroup.js"],"names":["React","FontAwesomeIcon","faFolder","Link","Button","faFile","ContextMenu","MenuItem","ContextMenuTrigger","FaRegTrashAlt","storage","database","useParams","useLocation","useFolder","DeleteFolder","folderId","group","path","files","where","_id","get","then","querySnapshot","forEach","doc","file","formatDoc","desertRef","ref","child","userId","name","console","log","delete","id","catch","error","folders","folder","FolderGroup","index","AuthUserId","owner","pathname","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { storage,database} from \"../../firebase\";\r\nimport {useParams,useLocation} from 'react-router-dom';\r\nimport { useFolder } from '../../hooks/useFolder';\r\n\r\n\r\n\r\nfunction DeleteFolder(folderId,group,path){\r\n    \r\n    if (folderId == null)\r\n        return;\r\n    \r\n\r\n    database.files.\r\n    where(\"folderId\",\"==\",folderId)\r\n    .where(\"userId\",\"==\",group._id)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            const file = database.formatDoc(doc)\r\n              \r\n            const desertRef = storage.ref().child(`files/${file.userId}/${path}/${file.name}`);\r\n            console.log(\"deleting files: \" + `files/${file.userId}/${path}/${file.name}`)\r\n\r\n            desertRef.delete().then(() => {\r\n                console.log(\"the file delete from the store\");\r\n            database.files.doc(file.id).delete().then(()=>{\r\n                console.log(\"the file delete from data bass\");\r\n            }).catch(()=>{\r\n                console.log(\"the file is not delete from data\")\r\n            })\r\n            }).catch((error) => {\r\n                console.log(error,\"the file is not delete from storeg\")\r\n            });\r\n        });\r\n    })\r\n  \r\n    database.folders.\r\n    where(\"parentId\",\"==\",folderId)\r\n    .where(\"userId\",\"==\",group._id)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n         querySnapshot.forEach((doc) => {\r\n            console.log(\"call other folder\")\r\n             const folder = database.formatDoc(doc)\r\n             DeleteFolder(folder.id, group,`${path}/${folder.name}`)\r\n\r\n         })\r\n})\r\n    console.log(\"delete folder\")\r\n\r\n    database.folders.doc(folderId).delete().then(()=>{\r\n                console.log(\"the file delete from data bass\");\r\n    }).catch(()=>{\r\n                console.log(\"the file is not delete from data\")\r\n    })\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function FolderGroup({folder,index,group,AuthUserId,path}) {\r\n    if (path==='Root'){\r\n        path='';\r\n      }\r\n\r\n    return (\r\n        <>\r\n        {group.owner === AuthUserId  && (\r\n            <>\r\n     <ContextMenuTrigger id={index}>\r\n     <Button \r\n             to={{\r\n                 pathname:`/folderG/${folder.id}`,\r\n                  state: {folder:folder},\r\n              }}\r\n              variant=\"outline-dark\" \r\n              className=\"text-truncate w-100\" \r\n              as={Link}>\r\n             <FontAwesomeIcon icon={faFolder} className=\"mr-2\" />\r\n             {folder.name}\r\n             </Button>\r\n    \r\n      </ContextMenuTrigger>\r\n   \r\n    <ContextMenu id={index} className=\"adva\">\r\n        <MenuItem  className=\"adva1\" onClick={()=>DeleteFolder(folder.id,group,path+\"/\"+folder.name)} >\r\n          <div>\r\n           <FaRegTrashAlt/>\r\n          . delete\r\n          </div>\r\n        </MenuItem>\r\n      </ContextMenu>\r\n      </>\r\n   )}\r\n        \r\n        {group.owner !== AuthUserId  && (\r\n            <>\r\n           <Button \r\n           to={{\r\n               pathname:`/folderG/${folder.id}`,\r\n                state: {folder:folder},\r\n            }}\r\n            variant=\"outline-dark\" \r\n            className=\"text-truncate w-100\" \r\n            as={Link}>\r\n           <FontAwesomeIcon icon={faFolder} className=\"mr-2\" />\r\n           {folder.name}\r\n           </Button>\r\n           </>\r\n        )}\r\n           </>\r\n          \r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}