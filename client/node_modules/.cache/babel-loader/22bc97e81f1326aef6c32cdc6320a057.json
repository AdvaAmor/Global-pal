{"ast":null,"code":"import { GET_GROUP, GET_GROUPS, GROUP_ERROR, CREATE_GROUP_FAIL, CREATE_GROUP_SUCCESS, DELETE_GROUP, UPDATE_GROUP_FOLLOWER, GROUP_FOLLOWER_ERROR } from '../actions/types';\nconst initialState = {\n  groups: [],\n  group: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_GROUPS:\n      return { ...state,\n        groups: payload,\n        loading: false\n      };\n\n    case GET_GROUP:\n      return { ...state,\n        group: payload,\n        loading: false\n      };\n\n    case CREATE_GROUP_SUCCESS:\n      return { ...state,\n        groups: [payload, ...state.groups],\n        loading: false\n      };\n\n    case DELETE_GROUP:\n      return { ...state,\n        groups: state.groups.filter(group => group._id !== payload),\n        loading: false\n      };\n\n    case GROUP_ERROR:\n    case CREATE_GROUP_FAIL:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_GROUP_FOLLOWER:\n      return { ...state,\n        groups: state.groups.map(group => group._id === payload.id ? { ...group,\n          followers: payload.followers\n        } : group),\n        loading: false\n      };\n\n    case GROUP_FOLLOWER_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/reducers/group.js"],"names":["GET_GROUP","GET_GROUPS","GROUP_ERROR","CREATE_GROUP_FAIL","CREATE_GROUP_SUCCESS","DELETE_GROUP","UPDATE_GROUP_FOLLOWER","GROUP_FOLLOWER_ERROR","initialState","groups","group","loading","error","state","action","type","payload","filter","_id","map","id","followers"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,iBAJJ,EAKIC,oBALJ,EAMIC,YANJ,EAOIC,qBAPJ,EAQIC,oBARJ,QAUS,kBAVT;AAYE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKd,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,MAAM,EAAEO,OAFH;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,KAAK,EAAEM,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKP,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,MAAM,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,MAAnB,CAFH;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaQ,MAAb,CAAqBP,KAAD,IAAWA,KAAK,CAACQ,GAAN,KAAcF,OAA7C,CAFH;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,WAAL;AACA,SAAKC,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKL,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaU,GAAb,CAAkBT,KAAD,IACzBA,KAAK,CAACQ,GAAN,KAAcF,OAAO,CAACI,EAAtB,GAA2B,EAAE,GAAGV,KAAL;AAAYW,UAAAA,SAAS,EAAEL,OAAO,CAACK;AAA/B,SAA3B,GAAwEX,KADhE,CAFH;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOA,SAAKJ,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKN;AACE,aAAOE,KAAP;AAhDJ;AAkDD","sourcesContent":["import {\r\n    GET_GROUP,\r\n    GET_GROUPS,\r\n    GROUP_ERROR,\r\n    CREATE_GROUP_FAIL,\r\n    CREATE_GROUP_SUCCESS,\r\n    DELETE_GROUP,\r\n    UPDATE_GROUP_FOLLOWER,\r\n    GROUP_FOLLOWER_ERROR\r\n\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    groups: [],\r\n    group: null,\r\n    loading: true,\r\n    error: {}\r\n  };\r\n\r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_GROUPS:\r\n        return {\r\n          ...state,\r\n          groups: payload,\r\n          loading: false\r\n        };\r\n      case GET_GROUP:\r\n        return {\r\n          ...state,\r\n          group: payload,\r\n          loading: false\r\n        };\r\n  \r\n      case CREATE_GROUP_SUCCESS:\r\n        return {\r\n          ...state,\r\n          groups: [payload, ...state.groups],\r\n          loading: false\r\n        };\r\n      case DELETE_GROUP:\r\n        return {\r\n          ...state,\r\n          groups: state.groups.filter((group) => group._id !== payload),\r\n          loading: false\r\n        };\r\n      case GROUP_ERROR:\r\n      case CREATE_GROUP_FAIL:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false\r\n        };\r\n        case UPDATE_GROUP_FOLLOWER:\r\n          return { \r\n            ...state,\r\n            groups: state.groups.map((group) =>\r\n            group._id === payload.id ? { ...group, followers: payload.followers } : group\r\n            ),\r\n            loading: false\r\n          };\r\n          case GROUP_FOLLOWER_ERROR:\r\n            return {\r\n              ...state,\r\n              error: payload,\r\n              loading: false\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}