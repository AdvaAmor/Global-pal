{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\myNotebook\\\\DashboardGroup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NavbarComponentGroup from \"./NavbarComponentGroup\";\nimport { Container } from 'react-bootstrap';\nimport AddFolderButton from './AddFolderButton';\nimport AddFileButton from './AddFileButton';\nimport { useFolder } from '../../hooks/useFolder';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useParams, useLocation } from 'react-router-dom';\nimport FolderBreadcrumbsGroup from './FolderBreadcrumbsGroup';\nimport FileGroup from './FileGroup';\nimport FolderGroup from './FolderGroup';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardGroup = ({\n  group: {\n    group\n  },\n  auth\n}) => {\n  _s();\n\n  const {\n    folderId\n  } = useParams();\n  const {\n    state = {}\n  } = useLocation();\n  const {\n    folder,\n    childFolders,\n    childFiles\n  } = useFolder(folderId, state.folder, group._id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponentGroup, {\n      group: group\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/group/${group._id}`,\n      className: \"btn btn-dark my-1\",\n      children: \"Back To group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FolderBreadcrumbsGroup, {\n          currentFolder: folder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AddFileButton, {\n            currentFolder: folder,\n            profile: group._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddFolderButton, {\n            currentFolder: folder,\n            profile: group._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), childFolders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: childFolders.map(childFolder => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: \"250px\"\n          },\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(FolderGroup, {\n            folder: childFolder,\n            index: childFolder.id,\n            group: group,\n            AuthUserId: auth.user._id,\n            path: [...folder.path.map(path => path.name), folder.name].join('/')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, childFolder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), childFolders.length > 0 && childFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 62\n      }, this), childFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: childFiles.map(childFiles => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: \"250px\"\n          },\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(FileGroup, {\n            file: childFiles,\n            path: [...folder.path.map(path => path.name), folder.name].join('/'),\n            index: childFiles.id,\n            group: group,\n            AuthUserId: auth.user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, childFiles.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DashboardGroup, \"T1GnQjovsB76WZbNNOLdhTZjh1g=\", false, function () {\n  return [useParams, useLocation, useFolder];\n});\n\n_c = DashboardGroup;\nDashboardGroup.propTypes = {\n  group: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group: state.group,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(DashboardGroup);\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardGroup\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/myNotebook/DashboardGroup.js"],"names":["React","NavbarComponentGroup","Container","AddFolderButton","AddFileButton","useFolder","connect","PropTypes","useParams","useLocation","FolderBreadcrumbsGroup","FileGroup","FolderGroup","Link","DashboardGroup","group","auth","folderId","state","folder","childFolders","childFiles","_id","length","map","childFolder","maxWidth","id","user","path","name","join","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import  React from 'react';\r\nimport NavbarComponentGroup from \"./NavbarComponentGroup\";\r\nimport { Container } from 'react-bootstrap';\r\nimport AddFolderButton from './AddFolderButton';\r\nimport AddFileButton from './AddFileButton';\r\nimport { useFolder } from '../../hooks/useFolder';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {useParams,useLocation} from 'react-router-dom';\r\nimport FolderBreadcrumbsGroup from './FolderBreadcrumbsGroup';\r\nimport FileGroup from './FileGroup';\r\nimport FolderGroup from './FolderGroup';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DashboardGroup = ({group:{ group},auth}) => {\r\n    const { folderId }=useParams()\r\n    const{state= {} } = useLocation();\r\n    const {folder, childFolders,childFiles} =useFolder(folderId,state.folder,group._id)\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <NavbarComponentGroup group={group} />\r\n        <Link to={`/group/${group._id}`} className='btn btn-dark my-1'>\r\n                Back To group\r\n            </Link>\r\n        <Container fluid> \r\n        <div className=\"d-flex align-items-center\">\r\n        <FolderBreadcrumbsGroup currentFolder={folder}/>\r\n       \r\n            <div>\r\n                \r\n            <AddFileButton currentFolder={folder} profile={group._id}/>\r\n            <AddFolderButton currentFolder={folder} profile={group._id}/>\r\n            </div>\r\n        \r\n        \r\n        \r\n        </div>\r\n        \r\n        {childFolders.length > 0 && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {childFolders.map(childFolder => (\r\n              <div\r\n                key={childFolder.id}\r\n                style={{ maxWidth: \"250px\" }}\r\n                className=\"p-2\"\r\n              >\r\n                <FolderGroup folder={childFolder}\r\n                index={childFolder.id}\r\n                group={group}\r\n                AuthUserId={auth.user._id}\r\n                path={[...folder.path.map(path => path.name),folder.name].join('/')} \r\n    \r\n                \r\n                 />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {childFolders.length > 0 && childFiles.length > 0 && <hr/>}\r\n        {childFiles.length > 0 && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {childFiles.map(childFiles => (\r\n              <div\r\n                key={childFiles.id}\r\n                style={{ maxWidth: \"250px\" }}\r\n                className=\"p-2\"\r\n              >\r\n                <FileGroup file={childFiles} \r\n                      path={[...folder.path.map(path => path.name),folder.name].join('/')} \r\n                      index={childFiles.id}\r\n                      group={group}\r\n                      AuthUserId={auth.user._id}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        </Container>\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\nDashboardGroup.propTypes = {\r\n    group: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    group: state.group,\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, {  })(DashboardGroup);\r\n"]},"metadata":{},"sourceType":"module"}