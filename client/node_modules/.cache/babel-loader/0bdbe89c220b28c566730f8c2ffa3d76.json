{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\post\\\\CommentItem.js\";\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteComment } from '../../actions/post';\nimport Moment from 'react-moment';\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport avatar from \"../../img/avatar.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    photo,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img my-1\",\n        src: `/uploads/${photo}`,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img my-1\",\n        src: avatar,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteComment(postId, _id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      children: /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/post/CommentItem.js"],"names":["React","Fragment","Link","PropTypes","connect","deleteComment","Moment","FaRegTrashAlt","avatar","CommentItem","postId","comment","_id","text","name","photo","user","date","auth","loading","e","propTypes","string","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAFU;AAGnBC,EAAAA,IAHmB;AAInBb,EAAAA;AAJmB,CAAD,kBAMlB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA,0BACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWW,IAAK,EAA3B;AAAA,iBACCD,KAAK,gBACS;AACA,QAAA,SAAS,EAAC,gBADV;AAEA,QAAA,GAAG,EAAG,YAAWA,KAAM,EAFvB;AAGA,QAAA,GAAG,EAAC;AAHJ;AAAA;AAAA;AAAA;AAAA,cADT,gBAKY;AACN,QAAA,SAAS,EAAC,gBADJ;AAEJ,QAAA,GAAG,EAAEP,MAFD;AAGJ,QAAA,GAAG,EAAC;AAHA;AAAA;AAAA;AAAA;AAAA,cANlB,eAYE;AAAA,kBAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAiBE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,4CAAmC,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,YAAf;AAAA,kBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGG,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,iBACC;AACE,MAAA,OAAO,EAAGQ,CAAD,IAAOf,aAAa,CAACK,MAAD,EAASE,GAAT,CAD/B;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAAA,6BAKA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMH,W;AAuCNA,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,MAAM,EAAEP,SAAS,CAACmB,MAAV,CAAiBC,UADH;AAEtBZ,EAAAA,OAAO,EAAER,SAAS,CAACqB,MAAV,CAAiBD,UAFJ;AAGtBL,EAAAA,IAAI,EAAEf,SAAS,CAACqB,MAAV,CAAiBD,UAHD;AAItBlB,EAAAA,aAAa,EAAEF,SAAS,CAACsB,IAAV,CAAeF;AAJR,CAAxB;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAed,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA4CI,WAA5C,CAAf","sourcesContent":["import React,{Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/post';\r\nimport Moment from 'react-moment';\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport avatar from \"../../img/avatar.jpg\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, photo, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n      {photo ? (\r\n                     <img\r\n                     className=\"round-img my-1\"\r\n                     src={`/uploads/${photo}`}\r\n                     alt=\"...\"\r\n                 />) : (<img\r\n                  className=\"round-img my-1\"\r\n                    src={avatar}\r\n                    alt=\"...\"\r\n                />)\r\n            }\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on <Moment format='YYYY/MM/DD'>{date}</Moment></p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n        <FaRegTrashAlt/>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);"]},"metadata":{},"sourceType":"module"}