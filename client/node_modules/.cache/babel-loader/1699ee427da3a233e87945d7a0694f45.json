{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\messenger\\\\Messenger.js\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Conversation from \"../conversations/Conversation\";\nimport ChatOnline from \"../chatOnline/ChatOnline\";\nimport Message from \"../message/Message\";\nimport { connect } from 'react-redux';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messenger = ({\n  user\n}) => {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const socket = useRef();\n  const scrollRef = useRef(); //useEffect 1\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, [socket]); //useEffect 2\n\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat, socket]); //socket?\n  //useEffect 3\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(users);\n    });\n  }, [user, socket]); //useEffect 4\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        // get all conversations of the user\n        const res = await axios.get(\"/api/conversations\");\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]); //useEffect 5\n\n  useEffect(() => {\n    //get all messages in a conversation\n    const getMessages = async () => {\n      try {\n        if (currentChat !== null) {\n          const res = await axios.get(`/api/messages/${currentChat._id}`);\n          setMessages(res.data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat, socket]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post(`/api/messages/`, message, config);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; //useEffect 6\n\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenuWrapper\",\n        children: conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setCurrentChat(c),\n          children: /*#__PURE__*/_jsxDEV(Conversation, {\n            conversation: c\n          }, c._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBoxWrapper\",\n        children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scrollRef,\n              children: /*#__PURE__*/_jsxDEV(Message, {\n                message: m,\n                own: m.sender === user._id\n              }, m._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatMessageInput\",\n              placeholder: \"write something...\",\n              onChange: e => setNewMessage(e.target.value),\n              value: newMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatSubmitButton\",\n              onClick: handleSubmit,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"noConversationText\",\n          children: \"Open a conversation to start a chat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnline\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineWrapper\",\n        children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n          onlineUsers: onlineUsers,\n          currentId: user._id,\n          setCurrentChat: setCurrentChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messenger, \"9Vs+6TKoBfSzRLoFKoQf0oS9f7A=\");\n\n_c = Messenger;\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(Messenger);\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/messenger/Messenger.js"],"names":["Conversation","ChatOnline","Message","connect","React","useEffect","useState","useRef","io","axios","Messenger","user","conversations","setConversations","messages","setMessages","currentChat","setCurrentChat","onlineUsers","setOnlineUsers","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","socket","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","getConversations","res","get","err","console","log","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","config","headers","post","scrollIntoView","behavior","map","c","m","target","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\r\nimport Conversation from \"../conversations/Conversation\";\r\nimport ChatOnline from \"../chatOnline/ChatOnline\"\r\nimport Message from \"../message/Message\";\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nconst Messenger = ({ user }) => {\r\n\r\n    const [conversations, setConversations] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n\r\n    //useEffect 1\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n\r\n        socket.current.on(\"getMessage\", (data) => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n\r\n    }, [socket]);\r\n\r\n\r\n    //useEffect 2\r\n    useEffect(() => {\r\n        \r\n        arrivalMessage &&\r\n            currentChat?.members.includes(arrivalMessage.sender) &&\r\n            setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat, socket]);//socket?\r\n\r\n\r\n    //useEffect 3\r\n    useEffect(() => {\r\n        \r\n        socket.current.emit(\"addUser\", user._id);\r\n        socket.current.on(\"getUsers\", users => {\r\n            setOnlineUsers(users);\r\n        })\r\n    }, [user, socket]);\r\n    \r\n\r\n    //useEffect 4\r\n    useEffect(() => {\r\n        \r\n        const getConversations = async () => {\r\n            try {\r\n                // get all conversations of the user\r\n                const res = await axios.get(\"/api/conversations\");\r\n                setConversations(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getConversations();\r\n    }, [user._id]);\r\n\r\n\r\n    //useEffect 5\r\n    useEffect(() => {\r\n\r\n        \r\n        //get all messages in a conversation\r\n        const getMessages = async () => {\r\n            try {\r\n                if (currentChat !== null) {\r\n                    const res = await axios.get(`/api/messages/${currentChat._id}`);\r\n                    setMessages(res.data);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat, socket]);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        };\r\n\r\n        const receiverId = currentChat.members.find(\r\n            (member) => member !== user._id\r\n        );\r\n\r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: user._id,\r\n            receiverId,\r\n            text: newMessage,\r\n        });\r\n\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const res = await axios.post(`/api/messages/`, message, config);\r\n            setMessages([...messages, res.data]);\r\n            setNewMessage(\"\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    //useEffect 6\r\n    useEffect(() => {\r\n        \r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    {/* <input placeholder=\"Search for friends\" className=\"chatMenuInput\" /> */}\r\n                    {conversations.map((c) => (\r\n                        <div onClick={() => setCurrentChat(c)}>\r\n                            <Conversation key={c._id} conversation={c} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {currentChat ? (\r\n                        <>\r\n                            <div className=\"chatBoxTop\">\r\n                                {messages.map((m) => (\r\n                                    <div ref={scrollRef}>\r\n                                        <Message key={m._id} message={m} own={m.sender === user._id} />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"chatBoxBottom\">\r\n                                <textarea\r\n                                    className=\"chatMessageInput\"\r\n                                    placeholder=\"write something...\"\r\n                                    onChange={(e) => setNewMessage(e.target.value)}\r\n                                    value={newMessage}\r\n                                ></textarea>\r\n                                <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                            </div>\r\n                        </>) : (\r\n                        <span className=\"noConversationText\">\r\n                            Open a conversation to start a chat.\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline\r\n                        onlineUsers={onlineUsers}\r\n                        currentId={user._id}\r\n                        setCurrentChat={setCurrentChat}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(Messenger);"]},"metadata":{},"sourceType":"module"}