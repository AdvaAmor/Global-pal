{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\myProject\\\\client\\\\src\\\\components\\\\groups\\\\GroupForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { newGroup } from '../../actions/group';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupForm = ({\n  newGroup\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    subject: '',\n    about: ''\n  });\n  const {\n    name,\n    subject,\n    about\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    newGroup({\n      name,\n      subject,\n      about\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sapir\",\n      children: \"Create a Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"subject\",\n          name: \"subject\",\n          value: subject,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"about\",\n          name: \"about\",\n          value: about,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"CreateGroup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GroupForm, \"VQh6XCHHzgARuyraU8Sowu6nr7A=\");\n\n_c = GroupForm;\nGroupForm.propTypes = {\n  newGroup: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  newGroup\n})(GroupForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/myProject/client/src/components/groups/GroupForm.js"],"names":["React","Fragment","useState","connect","newGroup","PropTypes","GroupForm","formData","setFormData","name","subject","about","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { newGroup } from '../../actions/group';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GroupForm = ({ newGroup}) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        subject: '',\r\n        about: ''\r\n      });\r\n\r\n      const {name ,subject, about} = formData;\r\n      const onChange = e => setFormData({...formData,[e.target.name]:e.target.value});\r\n      const onSubmit = e => {\r\n          e.preventDefault();\r\n          newGroup({name,subject,about});\r\n          \r\n      };\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"sapir\">Create a Group</h1>\r\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" \r\n                    placeholder=\"Name\" \r\n                    name=\"name\" \r\n                    value={name}\r\n                    onChange = {e => onChange(e)} \r\n                    required\r\n                     />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" \r\n                    placeholder=\"subject\" \r\n                    name=\"subject\"\r\n                    value={subject}\r\n                    onChange = {e => onChange(e)} \r\n                    required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"about\"\r\n                        name=\"about\"\r\n                        value={about}\r\n                        onChange = {e => onChange(e)} \r\n                        required\r\n                    />\r\n                </div>\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"CreateGroup\" />\r\n            </form>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGroupForm.propTypes = {\r\n    newGroup: PropTypes.func.isRequired\r\n  };\r\n\r\n\r\n\r\nexport default connect(null,{newGroup})(GroupForm);\r\n"]},"metadata":{},"sourceType":"module"}