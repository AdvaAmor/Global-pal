{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\myProject\\\\client\\\\src\\\\components\\\\myNotebook\\\\AddFileButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { storage, database } from \"../../firebase\";\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\";\nimport { v4 as uuidV4 } from 'uuid';\nimport { ProgressBar, Toast } from 'react-bootstrap'; // allow read, write: if request.auth != null || request.auth == null;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddFileButton({\n  currentFolder,\n  profile\n}) {\n  _s();\n\n  const [uploadingFiles, setUploadingFiles] = useState([]);\n\n  function handleUpload(e) {\n    const file = e.target.files[0];\n\n    if (currentFolder == null || file == null) {\n      return;\n    }\n\n    const id = uuidV4();\n    setUploadingFiles(prevUploadingFiles => [...prevUploadingFiles, {\n      id: id,\n      name: file.name,\n      progress: 0,\n      error: false\n    }]);\n    const currentFolderPath = currentFolder.path.map(path => path.name);\n    const filePath = currentFolder === ROOT_FOLDER ? `${currentFolderPath.join(\"/\")}/${file.name}` : `${currentFolderPath.join(\"/\")}/${currentFolder.name}/${file.name}`;\n    const uploadTask = storage.ref(`/files/${profile}/${filePath}`).put(file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes;\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.map(uploadFile => {\n          if (uploadFile.id === id) {\n            return { ...uploadFile,\n              progress: progress\n            };\n          }\n\n          return uploadFile;\n        });\n      });\n    }, () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.map(uploadFile => {\n          if (uploadFile.id === id) {\n            return { ...uploadFile,\n              error: true\n            };\n          }\n\n          return uploadFile;\n        });\n      });\n    }, () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.filter(uploadFile => {\n          return uploadFile.id !== id;\n        });\n      });\n      uploadTask.snapshot.ref.getDownloadURL().then(url => {\n        database.files.where(\"name\", \"==\", file.name).where(\"userId\", \"==\", profile).where(\"folderId\", \"==\", currentFolder.id).get().then(existingFiles => {\n          const existingFile = existingFiles.docs[0];\n\n          if (existingFile) {\n            existingFile.ref.update({\n              url: url\n            });\n          } else {\n            database.files.add({\n              url: url,\n              name: file.name,\n              createdAt: database.getCurrentTimestamp(),\n              folderId: currentFolder.id,\n              userId: profile\n            });\n          }\n        });\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"btn btn-outline-success btn-sm m-0 mr-2\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleUpload,\n        style: {\n          opacity: 0,\n          position: \"absolute\",\n          left: \"-9999px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), uploadingFiles.length > 0 && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: \"1rem\",\n        right: \"1rem\",\n        maxWidth: \"250px\"\n      },\n      children: uploadingFiles.map(file => /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => {\n          setUploadingFiles(prevUploadingFiles => {\n            return prevUploadingFiles.filter(uploadFile => {\n              return uploadFile.id !== file.id;\n            });\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          closeButton: file.error,\n          className: \"text-truncate w-100 d-block\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: !file.error,\n            variant: file.error ? \"danger\" : \"primary\",\n            now: file.error ? 100 : file.progress * 100,\n            label: file.error ? \"Error\" : `${Math.round(file.progress * 100)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, file.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), document.body)]\n  }, void 0, true);\n}\n\n_s(AddFileButton, \"grNRhCvE1WX28PisiRz8WFMCRa0=\");\n\n_c = AddFileButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFileButton\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/myProject/client/src/components/myNotebook/AddFileButton.js"],"names":["React","useState","ReactDOM","faFileUpload","FontAwesomeIcon","storage","database","ROOT_FOLDER","v4","uuidV4","ProgressBar","Toast","AddFileButton","currentFolder","profile","uploadingFiles","setUploadingFiles","handleUpload","e","file","target","files","id","prevUploadingFiles","name","progress","error","currentFolderPath","path","map","filePath","join","uploadTask","ref","put","on","snapshot","bytesTransferred","totalBytes","uploadFile","filter","getDownloadURL","then","url","where","get","existingFiles","existingFile","docs","update","add","createdAt","getCurrentTimestamp","folderId","userId","opacity","position","left","length","createPortal","bottom","right","maxWidth","Math","round","document","body"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { storage,database} from \"../../firebase\";\r\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\r\nimport {v4 as uuidV4 } from 'uuid';\r\nimport {ProgressBar,Toast} from 'react-bootstrap';\r\n// allow read, write: if request.auth != null || request.auth == null;\r\n\r\n\r\nexport default function AddFileButton({currentFolder,profile}) {\r\n    const [uploadingFiles,setUploadingFiles] = useState([])\r\n    function handleUpload(e){\r\n        const file = e.target.files[0]\r\n\r\n        if (currentFolder==null || file==null) {\r\n            return\r\n        }\r\n        const id = uuidV4()\r\n        setUploadingFiles(prevUploadingFiles =>[\r\n            ...prevUploadingFiles,\r\n            {id:id ,name:file.name,progress:0,error:false}\r\n        ])\r\n        const currentFolderPath = currentFolder.path.map(path => path.name) \r\n        const filePath =\r\n        currentFolder === ROOT_FOLDER\r\n          ? `${currentFolderPath.join(\"/\")}/${file.name}`\r\n          : `${currentFolderPath.join(\"/\")}/${currentFolder.name}/${file.name}`\r\n \r\n\r\n        const uploadTask = storage.ref(`/files/${profile}/${filePath}`).put(file);\r\n         \r\n        \r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const progress = snapshot.bytesTransferred / snapshot.totalBytes\r\n                setUploadingFiles(prevUploadingFiles =>{\r\n                    return prevUploadingFiles.map(uploadFile =>{\r\n                        if (uploadFile.id === id ){\r\n                            return {...uploadFile, progress: progress}\r\n                        }\r\n                        return uploadFile\r\n                    })\r\n                })\r\n            },\r\n            ()=>{\r\n                setUploadingFiles(prevUploadingFiles => {\r\n                    return prevUploadingFiles.map(uploadFile => {\r\n                      if (uploadFile.id === id) {\r\n                        return { ...uploadFile, error: true }\r\n                      }\r\n                      return uploadFile\r\n                })\r\n               }) \r\n            },\r\n            ()=>{\r\n              \r\n                setUploadingFiles(prevUploadingFiles =>{\r\n                    return prevUploadingFiles.filter(uploadFile =>{\r\n                        return uploadFile.id !== id\r\n                    })\r\n                })\r\n                uploadTask.snapshot.ref.getDownloadURL().then(url =>{\r\n                    database.files.where(\"name\",\"==\",file.name)\r\n                    .where(\"userId\",\"==\",profile)\r\n                    .where(\"folderId\",\"==\",currentFolder.id)\r\n                    .get()\r\n                    .then(existingFiles => {\r\n                        const existingFile = existingFiles.docs[0] \r\n                        if (existingFile) {\r\n                            existingFile.ref.update({ url: url })\r\n                          } else{\r\n                            database.files.add({\r\n                                url: url,\r\n                                name: file.name,\r\n                                createdAt: database.getCurrentTimestamp(),\r\n                                folderId: currentFolder.id,\r\n                                userId: profile,\r\n                            })\r\n\r\n                          }\r\n                    })\r\n\r\n                    \r\n                })\r\n            }\r\n        )\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <label className=\"btn btn-outline-success btn-sm m-0 mr-2\">\r\n        <FontAwesomeIcon icon={faFileUpload} />\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleUpload}\r\n          style={{ opacity: 0, position: \"absolute\", left: \"-9999px\" }}\r\n        />\r\n      </label>\r\n      {uploadingFiles.length > 0 &&\r\n      ReactDOM.createPortal(\r\n          <div \r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"1rem\",\r\n            right: \"1rem\",\r\n            maxWidth: \"250px\",\r\n          }}>\r\n           {uploadingFiles.map(file =>(\r\n                <Toast\r\n                key={file.id}\r\n                onClose={() => {\r\n                  setUploadingFiles(prevUploadingFiles => {\r\n                    return prevUploadingFiles.filter(uploadFile => {\r\n                      return uploadFile.id !== file.id\r\n                    })\r\n                  })\r\n                }}\r\n              >\r\n                <Toast.Header\r\n                  closeButton={file.error}\r\n                  className=\"text-truncate w-100 d-block\"\r\n                >\r\n                  {file.name}\r\n                </Toast.Header>\r\n                <Toast.Body>\r\n                  <ProgressBar\r\n                    animated={!file.error}\r\n                    variant={file.error ? \"danger\" : \"primary\"}\r\n                    now={file.error ? 100 : file.progress * 100}\r\n                    label={\r\n                      file.error\r\n                        ? \"Error\"\r\n                        : `${Math.round(file.progress * 100)}%`\r\n                    }\r\n                  />\r\n                </Toast.Body>\r\n              </Toast>\r\n           ))}   \r\n          </div>,\r\n          document.body\r\n      )}\r\n      </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}