{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\zoom\\\\Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n_c = Container;\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n_c2 = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c3 = Video;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = props => {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socketRef.current = io(\"ws://localhost:8000\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    peer.on('close', () => {\n      setPeers(peers.filter(p => p !== peer));\n      peersRef.current = peersRef.current.filter(p => p.peer !== peer);\n    });\n    return peer;\n  }\n\n  const returnToDashboard = () => {\n    userVideo.current.srcObject.getTracks().forEach(function (track) {\n      track.stop();\n    });\n    peers.forEach(p => p.destroy());\n    socketRef.current.disconnect();\n    props.history.push(\"/dashboard\"); //socketRef.current.on(\"disconnect\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => returnToDashboard(),\n      children: \"exit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n        muted: true,\n        ref: userVideo,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), peers.map((peer, index) => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Room, \"CnCiOWEqFkEX/I5xE9Iw8SwijJY=\");\n\n_c4 = Room;\nexport default Room;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledVideo\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Room\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/zoom/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","styled","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","filter","returnToDashboard","getTracks","track","stop","destroy","disconnect","history","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io(\"ws://localhost:8000\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n        \r\n        peer.on('close', () => {\r\n            setPeers(peers.filter(p => p !== peer))\r\n            peersRef.current = peersRef.current.filter(p => p.peer !== peer)\r\n        })\r\n\r\n        return peer;\r\n    }\r\n    const returnToDashboard = () => {\r\n        userVideo.current.srcObject.getTracks().forEach(function(track) {\r\n            track.stop();\r\n          });\r\n        peers.forEach(p => p.destroy())\r\n        socketRef.current.disconnect();\r\n        props.history.push(\"/dashboard\"); \r\n        //socketRef.current.on(\"disconnect\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <button onClick={() => returnToDashboard()}>exit</button>\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Room;"]},"metadata":{},"sourceType":"module"}