{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\myProject\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/myProject/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,SAAS,EAAGC,SADM;AAElBC,EAAAA,IAAI,EAAC;AAACC,IAAAA,eAAD;AAAmBC,IAAAA;AAAnB,GAFa;AAGlB,KAAGC;AAHe,CAAD,kBAKjB,QAAC,KAAD,OACKA,IADL;AAEC,EAAA,MAAM,EAAEC,KAAK,IACV,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACA,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADA,gBAGI,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,QALJ;;KAAMP,Y;AAiBNA,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,IAAI,EAACL,SAAS,CAACW,MAAV,CAAiBC;AADD,CAAzB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAACS,KAAK,CAACT;AADmB,CAAL,CAA7B;;AAGA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route , Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n    component : Component ,\r\n    auth:{isAuthenticated , loading},\r\n    ...rest\r\n}) => (\r\n    <Route\r\n     {...rest} \r\n     render={props => \r\n        !isAuthenticated && !loading ? (\r\n        <Redirect to='/login'/>\r\n        ):(\r\n            <Component {...props} />\r\n        )\r\n    }\r\n/>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}