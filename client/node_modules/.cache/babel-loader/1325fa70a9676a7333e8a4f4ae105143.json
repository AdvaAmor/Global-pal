{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\groups\\\\Group.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGroupById } from '../../actions/group';\nimport Posts from '../posts/Posts';\nimport GroupFollowerButtons from '../groups/GroupFollowerButtons';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Group = ({\n  getGroupById,\n  group: {\n    group,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGroupById(match.params.id);\n  }, [getGroupById, group]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: group === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GroupFollowerButtons, {\n        group: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/myNotebookGroup\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user-circle text-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), \" \", group.name, \"'s files\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"a\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        groupId: match.params.id,\n        owner: group.owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Group, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Group;\nGroup.propTypes = {\n  getGroupById: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group: state.group\n});\n\nexport default connect(mapStateToProps, {\n  getGroupById\n})(Group);\n\nvar _c;\n\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/groups/Group.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getGroupById","Posts","GroupFollowerButtons","Link","Group","group","loading","match","params","id","name","about","owner","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEJ,EAAAA,YAAF;AAAgBK,EAAAA,KAAK,EAAE;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB;AAA2CC,EAAAA;AAA3C,CAAD,KAAwD;AAAA;;AAClEX,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAZ;AACH,GAFQ,EAEN,CAACT,YAAD,EAAeK,KAAf,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,cACKA,KAAK,KAAK,IAAV,IAAkBC,OAAlB,gBAA4B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA5B,gBACG,QAAC,QAAD;AAAA,8BAEI,QAAC,oBAAD;AAAsB,QAAA,KAAK,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,kBAAT;AAA4B,QAAA,SAAS,EAAC,eAAtC;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,OACyDA,KAAK,CAACK,IAD/D;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI;AAAK,QAAA,SAAS,EAAC,GAAf;AAAA,gCACI;AAAA,oBAAKL,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIL,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEJ,KAAK,CAACC,MAAN,CAAaC,EAA7B;AAAiC,QAAA,KAAK,EAAEJ,KAAK,CAACO;AAA9C;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzBD;;GAAMR,K;;KAAAA,K;AA2BNA,KAAK,CAACS,SAAN,GAAkB;AACdb,EAAAA,YAAY,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADf;AAEdV,EAAAA,KAAK,EAAER,SAAS,CAACmB,MAAV,CAAiBD;AAFV,CAAlB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,KAAK,EAAEa,KAAK,CAACb;AADiB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA2CI,KAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGroupById } from '../../actions/group';\r\nimport Posts from '../posts/Posts';\r\nimport GroupFollowerButtons from '../groups/GroupFollowerButtons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Group = ({ getGroupById, group: { group, loading }, match }) => {\r\n    useEffect(() => {\r\n        getGroupById(match.params.id)\r\n    }, [getGroupById, group])\r\n\r\n    return (\r\n        <Fragment>\r\n            {group === null || loading ? <Spinner /> :\r\n                <Fragment>\r\n\r\n                    <GroupFollowerButtons group={group} />\r\n                    <Link to=\"/myNotebookGroup\" className=\"btn btn-light\">\r\n                        <i className=\"fas fa-user-circle text-primary\"></i> {group.name}'s files</Link>\r\n\r\n\r\n                    <div className=\"a\">\r\n                        <h2>{group.name}</h2>\r\n                        <p>{group.about}</p>\r\n                    </div>\r\n\r\n                    <Posts groupId={match.params.id} owner={group.owner} />\r\n\r\n                </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGroup.propTypes = {\r\n    getGroupById: PropTypes.func.isRequired,\r\n    group: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    group: state.group\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGroupById })(Group)\r\n"]},"metadata":{},"sourceType":"module"}