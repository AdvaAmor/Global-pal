{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\finalproject__adva_sapir\\\\FinalProject\\\\Global-pal\\\\client\\\\src\\\\components\\\\groups\\\\GroupItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteGroup } from '../../actions/group';\nimport GroupFollowerButton from './GroupFollowerButtons';\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupItem = ({\n  auth,\n  group,\n  group: {\n    name,\n    _id,\n    about,\n    owner\n  },\n  deleteGroup\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my\",\n        children: [\"About : \", about && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/group/${_id}`,\n        className: \"btn btn-primary\",\n        children: \"view group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GroupFollowerButton, {\n        group: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), !auth.loading && owner.toString() === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => deleteGroup(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: [/*#__PURE__*/_jsxDEV(FaRegTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GroupItem;\nGroupItem.propTypes = {\n  group: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteGroup\n})(GroupItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupItem\");","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/components/groups/GroupItem.js"],"names":["React","PropTypes","Link","connect","deleteGroup","GroupFollowerButton","FaRegTrashAlt","GroupItem","auth","group","name","_id","about","owner","loading","toString","user","e","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,KAAN;AAAYA,EAAAA,KAAK,EAAC;AAACC,IAAAA,IAAD;AAAQC,IAAAA,GAAR;AAAcC,IAAAA,KAAd;AAAsBC,IAAAA;AAAtB,GAAlB;AAA+CT,EAAAA;AAA/C,CAAD,KAAiE;AAE/E,sBAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACA;AAAA,8BACI;AAAA,kBAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,IAAb;AAAA,+BAA2BE,KAAK,iBAAI;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASD,GAAI,EAAxB;AAA2B,QAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,mBAAD;AAAqB,QAAA,KAAK,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQK,CAACD,IAAI,CAACM,OAAN,IAAiBD,KAAK,CAACE,QAAN,OAAqBP,IAAI,CAACQ,IAAL,CAAUL,GAAhD,iBACG;AACA,QAAA,OAAO,EAAGM,CAAD,IAAOb,WAAW,CAACO,GAAD,CAD3B;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,SAAS,EAAC,gBAHV;AAAA,gCAKJ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBALI;AAAA;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwBH,CA1BD;;KAAMJ,S;AA4BNA,SAAS,CAACW,SAAV,GAAsB;AAClBT,EAAAA,KAAK,EAACR,SAAS,CAACkB,MAAV,CAAiBC,UADL;AAElBZ,EAAAA,IAAI,EAACP,SAAS,CAACkB,MAAV,CAAiBC,UAFJ;AAGlBhB,EAAAA,WAAW,EAACH,SAAS,CAACoB,IAAV,CAAeD;AAHT,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bf,EAAAA,IAAI,EAACe,KAAK,CAACf;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACmB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAAuCG,SAAvC,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { deleteGroup } from '../../actions/group';\r\nimport GroupFollowerButton from './GroupFollowerButtons';\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\nconst GroupItem = ({auth,group,group:{name , _id , about , owner},deleteGroup}) => {\r\n   \r\n    return (\r\n\r\n        <div className=\"profile bg-light\">\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p className='my'>About : {about && <span>{about}</span>}</p>\r\n\r\n            <Link to={`/group/${_id}`} className='btn btn-primary'>\r\n                view group\r\n            </Link>\r\n            <GroupFollowerButton group={group}/>\r\n            {!auth.loading && owner.toString() === auth.user._id && (\r\n                <button \r\n                onClick={(e) => deleteGroup(_id)}  \r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n              >\r\n            <FaRegTrashAlt/>\r\n              Delete</button>\r\n            )}\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nGroupItem.propTypes = {\r\n    group:PropTypes.object.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    deleteGroup:PropTypes.func.isRequired\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n\r\n});\r\nexport default connect(mapStateToProps,{deleteGroup})(GroupItem)\r\n"]},"metadata":{},"sourceType":"module"}