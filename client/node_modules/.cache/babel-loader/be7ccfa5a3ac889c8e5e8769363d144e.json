{"ast":null,"code":"import { GET_FRIENDS, GET_PROFILE, GET_CONVERSATION_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_FOLLOWER, GET_PROFILES, FOLLOWER_ERROR, GET_SEARCH_PROFILES } from '../actions/types';\nconst initialState = {\n  profile: null,\n  friends: [],\n  // followers&followings\n  conversationProfile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return { ...state,\n        profile: payload,\n        loading: false\n      };\n\n    case GET_FRIENDS:\n      return { ...state,\n        friends: payload,\n        loading: false\n      };\n\n    case GET_CONVERSATION_PROFILE:\n      return { ...state,\n        conversationProfile: payload,\n        loading: false\n      };\n\n    case GET_SEARCH_PROFILES:\n      return { ...state,\n        profiles: payload,\n        loading: false\n      };\n\n    case GET_PROFILES:\n      return { ...state,\n        profiles: payload,\n        loading: false\n      };\n\n    case PROFILE_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case CLEAR_PROFILE:\n      return { ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n\n    case UPDATE_FOLLOWER:\n      return { ...state,\n        profiles: state.profiles.map(profile => profile._id === payload.id ? { ...profile,\n          followers: payload.followers\n        } : profile),\n        loading: false\n      };\n\n    case FOLLOWER_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/finalproject__adva_sapir/FinalProject/Global-pal/client/src/reducers/profile.js"],"names":["GET_FRIENDS","GET_PROFILE","GET_CONVERSATION_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_FOLLOWER","GET_PROFILES","FOLLOWER_ERROR","GET_SEARCH_PROFILES","initialState","profile","friends","conversationProfile","profiles","repos","loading","error","state","action","type","payload","map","_id","id","followers"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,wBAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,cARF,EASEC,mBATF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAEN;AACbC,EAAAA,mBAAmB,EAAE,IAHF;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,OAAO,EAAE,IANU;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB;AAUA,eAAe,UAAUC,KAAK,GAAGR,YAAlB,EAAgCS,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKlB,WAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELP,QAAAA,OAAO,EAAEU,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,OAAO,EAAES,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKb,wBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,mBAAmB,EAAEQ,OAFhB;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKP,mBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,QAAQ,EAAEO,OAFL;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,QAAQ,EAAEO,OAFL;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKX,aAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,OAAO,EAAE,IAFJ;AAGLI,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKV,eAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeQ,GAAf,CAAoBX,OAAD,IAC3BA,OAAO,CAACY,GAAR,KAAgBF,OAAO,CAACG,EAAxB,GAA6B,EAAE,GAAGb,OAAL;AAAcc,UAAAA,SAAS,EAAEJ,OAAO,CAACI;AAAjC,SAA7B,GAA4Ed,OADpE,CAFL;AAKLK,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKR,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOE,KAAP;AApEJ;AAuED","sourcesContent":["import {\r\n  GET_FRIENDS,\r\n  GET_PROFILE,\r\n  GET_CONVERSATION_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_FOLLOWER,\r\n  GET_PROFILES,\r\n  FOLLOWER_ERROR,\r\n  GET_SEARCH_PROFILES\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  friends: [], // followers&followings\r\n  conversationProfile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n\r\n    case GET_FRIENDS:\r\n      return {\r\n        ...state,\r\n        friends: payload,\r\n        loading: false\r\n      };\r\n\r\n    case GET_CONVERSATION_PROFILE:\r\n      return {\r\n        ...state,\r\n        conversationProfile: payload,\r\n        loading: false\r\n      };\r\n\r\n    case GET_SEARCH_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n\r\n    case UPDATE_FOLLOWER:\r\n      return {\r\n        ...state,\r\n        profiles: state.profiles.map((profile) =>\r\n          profile._id === payload.id ? { ...profile, followers: payload.followers } : profile\r\n        ),\r\n        loading: false\r\n      };\r\n\r\n    case FOLLOWER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}